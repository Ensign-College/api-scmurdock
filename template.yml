AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
#  MyLambdaFunction:
#    Type: 'AWS::Serverless::Function'
#    Properties:
#      Handler: index.handler
#      Runtime: nodejs14.x
#      CodeUri: ./lambda
#      MemorySize: 128
#      Timeout: 30
#      Environment:
#        Variables:
#          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpointAddress
#      Events:
#        MyApi:
#          Type: Api
#          Properties:
#            Path: /myendpoint
#            Method: get

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.ordersHandler
      Runtime: nodejs14.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders
            Method: post

  OrderItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.orderItemsHandler
      Runtime: nodejs14.x
      Events:
        OrderItemsApiEvent:
          Type: Api
          Properties:
            Path: /orderItems
            Method: post

  OrdersByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.ordersByIdHandler
      Runtime: nodejs14.x
      Events:
        OrdersByIdApiEvent:
          Type: Api
          Properties:
            Path: /orders/{orderId}
            Method: get

  BoxesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.boxesHandler
      Runtime: nodejs14.x
      Events:
        BoxesApiEvent:
          Type: Api
          Properties:
            Path: /boxes
            Method: get

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.0.0/24

  MyElasticacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for ElastiCache
      SubnetIds:
        - !Ref MySubnet

  MyElasticacheRedis:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      CacheNodeType: cache.t2.micro
      Engine: redis
      NumCacheNodes: 1
      Port: 6379
      VpcSecurityGroupIds:
        - !GetAtt MySecurityGroup.GroupId
      CacheSubnetGroupName: !Ref MyElasticacheSubnetGroup

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0


